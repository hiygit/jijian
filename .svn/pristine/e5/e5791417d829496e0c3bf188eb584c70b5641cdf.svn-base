{"remainingRequest":"f:\\纪检项目\\byqc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!f:\\纪检项目\\byqc\\src\\views\\AddInfo\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"f:\\纪检项目\\byqc\\src\\views\\AddInfo\\index.vue","mtime":1577184081765},{"path":"f:\\纪检项目\\byqc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"f:\\纪检项目\\byqc\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"f:\\纪检项目\\byqc\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"f:\\纪检项目\\byqc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"f:\\纪检项目\\byqc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport qs from \"qs\";\r\nimport Breadcrumb from \"@/components/Breadcrumb\";\r\nfunction clearNoNum(obj){\r\n  //先把非数字的都替换掉，除了数字和.\r\n  obj.value = obj.value.replace(/[^\\d.]/g,\"\");\r\n  //保证只有出现一个.而没有多个.\r\n  obj.value = obj.value.replace(/\\.{2,}/g,\".\");\r\n  //必须保证第一个为数字而不是.\r\n  obj.value = obj.value.replace(/^\\./g,\"\");\r\n  //保证.只出现一次，而不能出现两次以上\r\n  obj.value = obj.value.replace(\".\",\"$#$\").replace(/\\./g,\"\").replace(\"$#$\",\".\");\r\n  //只能输入两个小数\r\n  obj.value = obj.value.replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/,'$1$2.$3');\r\n}\r\nexport default {\r\n  name: \"AddInfo\",\r\n  props: {},\r\n  data() {\r\n    return {\r\n      redpicimg:\"\",//给后台传值\r\n      redimg:\"\",//不带域名的图片路径\r\n      showinput: true, //工作单位查看时显示\r\n      disabled: false,\r\n      labelWidth: \"105px\",\r\n      form: {\r\n        redBottomPhoto: \"\", //图片\r\n        name: \"\", //姓名\r\n        sex: \"\", //性别\r\n        nation: \"\", //民族\r\n        nativePlace: \"\", //籍贯\r\n        birthday: \"\", //生日\r\n        idCard: \"\", //身份证号\r\n        politicsStatus: \"\", //政治面貌\r\n        educationBackground: \"\", //学历\r\n        maritalStatus: \"\", //婚姻状况\r\n        partyTime: \"\", //入党时间\r\n        workTime: \"\", //工作时间\r\n        companyName: \"\",\r\n        companyNameid:\"\",\r\n        \"office.name\": \"\", //工作单位id\r\n        presentOccupation: \"\", //现任职务\r\n        jobLevel: \"\", //职务级别\r\n        incumbentTime: \"\", //现任职务时间\r\n        personnelcategory: \"\", //人员类型\r\n        titleJobs: \"\", //职称\r\n        titleJobsLevel: \"\", //职称级别\r\n        isCPPCCMemberOrNot: \"\", //是否是政协委员\r\n        isNPCDEputiesOrNot: \"\", //是否人大代表\r\n        isPartyRepresentativeOrNot: \"\", //是否党代表\r\n        presentAddress: \"\", //现住址\r\n        phone: \"\", //联系电话\r\n        personalResume: \"\", //个人工作简历\r\n        rewardsAndPunishment: \"\", //奖惩情况\r\n        otherrelevantinformation: \"\" //其他相关情况\r\n      },\r\n      rules: {\r\n        redBottomPhoto: [\r\n          { required: true, message: \"请上传头像\", trigger: \"blur\" }\r\n        ],\r\n        name: [{ required: true, message: \"请输入姓名\", trigger: \"blur\" }],\r\n        sex: [{ required: true, message: \"请选择性别\", trigger: \"blur\" }],\r\n        nation: [{ required: true, message: \"请选择民族\", trigger: \"blur\" }],\r\n        nativePlace: [\r\n          { required: true, message: \"请输入籍贯\", trigger: \"blur\" }\r\n        ],\r\n        birthday: [\r\n          { required: true, message: \"请选择出生日期\", trigger: \"blur\" }\r\n        ],\r\n        educationBackground: [\r\n          { required: true, message: \"请选择学历\", trigger: \"blur\" }\r\n        ],\r\n        maritalStatus: [\r\n          { required: true, message: \"请选择婚姻状况\", trigger: \"blur\" }\r\n        ],\r\n        idCard: [\r\n          { required: true, message: \"请输入身份证号\", trigger: \"blur\" }\r\n        ],\r\n        workTime: [\r\n          { required: true, message: \"请选择参加工作时间\", trigger: \"blur\" }\r\n        ],\r\n        workTime: [\r\n          { required: true, message: \"请选择参加工作时间\", trigger: \"blur\" }\r\n        ],\r\n        presentOccupation: [\r\n          { required: true, message: \"请输入现任职务\", trigger: \"blur\" }\r\n        ],\r\n        presentOccupation: [\r\n          { required: true, message: \"请输入现任职务\", trigger: \"blur\" }\r\n        ],\r\n        jobLevel: [\r\n          { required: true, message: \"请选择职务级别\", trigger: \"blur\" }\r\n        ],\r\n        incumbentTime: [\r\n          { required: true, message: \"请选择现任作时间\", trigger: \"blur\" }\r\n        ],\r\n        personnelcategory: [\r\n          { required: true, message: \"请选择人员类型\", trigger: \"blur\" }\r\n        ],\r\n        titleJobs: [{ required: true, message: \"请输入职称\", trigger: \"blur\" }],\r\n        titleJobsLevel: [\r\n          { required: true, message: \"请选择职称级别\", trigger: \"blur\" }\r\n        ],\r\n        isCPPCCMemberOrNot: [\r\n          { required: true, message: \"请选择是否政协委员\", trigger: \"blur\" }\r\n        ],\r\n        isNPCDEputiesOrNot: [\r\n          { required: true, message: \"请选择是否人大代表\", trigger: \"blur\" }\r\n        ],\r\n        isPartyRepresentativeOrNot: [\r\n          { required: true, message: \"请选择是否党代表\", trigger: \"blur\" }\r\n        ],\r\n        presentAddress: [\r\n          { required: true, message: \"请输入现住址\", trigger: \"blur\" }\r\n        ],\r\n        phone: [{ required: true, message: \"请输入联系电话\", trigger: \"blur\" }]\r\n      },\r\n      //家庭成员\r\n      familyMembers: [\r\n        {\r\n          appellation: \"\", //称谓\r\n          name: \"\", //姓名\r\n          politicsStatus: \"\", //政治面貌\r\n          presentOccupation: \"\", //现任职务\r\n          companyName: \"\", //工作单位\r\n          age: \"\", //年龄\r\n          id: \"\"\r\n        }\r\n      ],\r\n      //个人及配偶、共同生活的子女拥有的房产情况\r\n      housingSituations: [\r\n        {\r\n          serialNumber: \"\",\r\n          roomNumber: \"\",\r\n          coveredArea: \"\",\r\n          purchasingDate: \"\",\r\n          purchasePrice: \"\",\r\n          propertyOwner: \"\",\r\n          location: \"\",\r\n          id: \"\"\r\n        }\r\n      ],\r\n      showinputcompanyName:true,\r\n      //表格高度\r\n      tableHeight: \"50vh\",\r\n      sexlist: [], //性别数组\r\n      politicallist: [], //政治面貌数组\r\n      degreelist: [], //学历数组\r\n      marriagelist: [], //婚姻数组\r\n      dutyRankList: [], //职务级别\r\n      Personneltype: [], //人员类型\r\n      isif: [], //是否选择下拉框\r\n      unitslist: [], //级联选择\r\n      zhichengjibie:[],//职称级别\r\n      // 民族\r\n      nationalities: [\r\n        \"汉族\",\r\n        \"蒙古族\",\r\n        \"回族\",\r\n        \"藏族\",\r\n        \"维吾尔族\",\r\n        \"苗族\",\r\n        \"彝族\",\r\n        \"壮族\",\r\n        \"布依族\",\r\n        \"朝鲜族\",\r\n        \"满族\",\r\n        \"侗族\",\r\n        \"瑶族\",\r\n        \"白族\",\r\n        \"土家族\",\r\n        \"哈尼族\",\r\n        \"哈萨克族\",\r\n        \"傣族\",\r\n        \"黎族\",\r\n        \"傈僳族\",\r\n        \"佤族\",\r\n        \"畲族\",\r\n        \"高山族\",\r\n        \"拉祜族\",\r\n        \"水族\",\r\n        \"东乡族\",\r\n        \"纳西族\",\r\n        \"景颇族\",\r\n        \"柯尔克孜族\",\r\n        \"土族\",\r\n        \"达斡尔族\",\r\n        \"仫佬族\",\r\n        \"羌族\",\r\n        \"布朗族\",\r\n        \"撒拉族\",\r\n        \"毛南族\",\r\n        \"仡佬族\",\r\n        \"锡伯族\",\r\n        \"阿昌族\",\r\n        \"普米族\",\r\n        \"塔吉克族\",\r\n        \"怒族\",\r\n        \"乌孜别克族\",\r\n        \"俄罗斯族\",\r\n        \"鄂温克族\",\r\n        \"德昂族\",\r\n        \"保安族\",\r\n        \"裕固族\",\r\n        \"京族\",\r\n        \"塔塔尔族\",\r\n        \"独龙族\",\r\n        \"鄂伦春族\",\r\n        \"赫哲族\",\r\n        \"门巴族\",\r\n        \"珞巴族\",\r\n        \"基诺族\"\r\n      ]\r\n    };\r\n  },\r\n  created() {\r\n    document.title = \"个人信息\";\r\n    let that = this;\r\n    //性别\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + \"web/dict\",\r\n      data: { type: \"sex\" },\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      transformRequest: [\r\n        function(data) {\r\n          return qs.stringify(data);\r\n        }\r\n      ]\r\n    }).then(res => {\r\n      if (res.data.success && res.data.errorCode == \"-1\") {\r\n        res.data.body.dictValueList.map(function(list) {\r\n          that.sexlist.push({ value: list.value, label: list.label });\r\n        });\r\n      } else {\r\n        this.$message.error(res.data.msg);\r\n      }\r\n    });\r\n    //政治面貌\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + \"web/dict\",\r\n      data: { type: \"politics_status\" },\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      transformRequest: [\r\n        function(data) {\r\n          return qs.stringify(data);\r\n        }\r\n      ]\r\n    }).then(res => {\r\n      if (res.data.success && res.data.errorCode == \"-1\") {\r\n        res.data.body.dictValueList.map(function(list) {\r\n          that.politicallist.push({ value: list.value, label: list.label });\r\n        });\r\n      } else {\r\n        this.$message.error(res.data.msg);\r\n      }\r\n    });\r\n    //学历\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + \"web/dict\",\r\n      data: { type: \"education_background\" },\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      transformRequest: [\r\n        function(data) {\r\n          return qs.stringify(data);\r\n        }\r\n      ]\r\n    }).then(res => {\r\n      if (res.data.success && res.data.errorCode == \"-1\") {\r\n        res.data.body.dictValueList.map(function(list) {\r\n          that.degreelist.push({ value: list.value, label: list.label });\r\n        });\r\n      } else {\r\n        this.$message.error(res.data.msg);\r\n      }\r\n    });\r\n    //婚姻\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + \"web/dict\",\r\n      data: { type: \"marital_status\" },\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      transformRequest: [\r\n        function(data) {\r\n          return qs.stringify(data);\r\n        }\r\n      ]\r\n    }).then(res => {\r\n      if (res.data.success && res.data.errorCode == \"-1\") {\r\n        res.data.body.dictValueList.map(function(list) {\r\n          that.marriagelist.push({ value: list.value, label: list.label });\r\n        });\r\n      } else {\r\n        this.$message.error(res.data.msg);\r\n      }\r\n    });\r\n    //职务级别\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + \"web/dict\",\r\n      data: { type: \"job_level\" },\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      transformRequest: [\r\n        function(data) {\r\n          return qs.stringify(data);\r\n        }\r\n      ]\r\n    }).then(res => {\r\n      if (res.data.success && res.data.errorCode == \"-1\") {\r\n        res.data.body.dictValueList.map(function(list) {\r\n          that.dutyRankList.push({ value: list.value, label: list.label });\r\n        });\r\n      } else {\r\n        this.$message.error(res.data.msg);\r\n      }\r\n    });\r\n    //人员类型\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + \"web/dict\",\r\n      data: { type: \"personne_icategory\" },\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      transformRequest: [\r\n        function(data) {\r\n          return qs.stringify(data);\r\n        }\r\n      ]\r\n    }).then(res => {\r\n      if (res.data.success && res.data.errorCode == \"-1\") {\r\n        res.data.body.dictValueList.map(function(list) {\r\n          that.Personneltype.push({ value: list.value, label: list.label });\r\n        });\r\n      } else {\r\n        this.$message.error(res.data.msg);\r\n      }\r\n    });\r\n    //是否是政协委员\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + \"web/dict\",\r\n      data: { type: \"yes_no\" },\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      transformRequest: [\r\n        function(data) {\r\n          return qs.stringify(data);\r\n        }\r\n      ]\r\n    }).then(res => {\r\n      if (res.data.success && res.data.errorCode == \"-1\") {\r\n        res.data.body.dictValueList.map(function(list) {\r\n          that.isif.push({ value: list.value, label: list.label });\r\n        });\r\n      } else {\r\n        this.$message.error(res.data.msg);\r\n      }\r\n    });\r\n    //职称级别\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + \"web/dict\",\r\n      data: { type: \"title_jobs_level\" },\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      transformRequest: [\r\n        function(data) {\r\n          return qs.stringify(data);\r\n        }\r\n      ]\r\n    }).then(res => {\r\n      if (res.data.success && res.data.errorCode == \"-1\") {\r\n        res.data.body.dictValueList.map(function(list) {\r\n          that.zhichengjibie.push({ value: list.value, label: list.label });\r\n        });\r\n      } else {\r\n        this.$message.error(res.data.msg);\r\n      }\r\n    });\r\n  },\r\n  mounted() {\r\n    //updatas 0-修改  2-新增     1-查看\r\n    this.disabled = this.$route.query.updatas == 1 ? true : false;\r\n    this.showinput = this.$route.query.updatas == 2||this.$route.query.updatas==0 ? false : true;\r\n    this.showinputcompanyName = this.$route.query.updatas == 2? false : true;\r\n    let id = this.$route.query.id; //参数id\r\n    if (id) {\r\n      let objs = {\r\n        userId: JSON.parse(localStorage.getItem(\"userinfo\")).isd,\r\n        id: id\r\n      };\r\n      this.init(objs);\r\n    }\r\n    this.initunits();\r\n  },\r\n  methods: {\r\n    indexinfo(value) {\r\n      return value + 1 > 9 ? value + 1 : \"0\" + (value + 1);\r\n    },\r\n    //保存\r\n    savebtns(formName) {\r\n      let that = this;\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          let requestform = {\r\n            redBottomPhoto: that.redimg==\"\"?that.redpicimg:that.redimg, //图片\r\n            name: that.form.name, //姓名\r\n            sex: that.form.sex, //性别\r\n            nation: that.form.nation, //民族\r\n            nativePlace: that.form.nativePlace, //籍贯\r\n            birthday: that.form.birthday, //生日\r\n            idCard: that.form.idCard, //身份证号\r\n            politicsStatus: that.form.politicsStatus, //政治面貌\r\n            educationBackground: that.form.educationBackground, //学历\r\n            maritalStatus: that.form.maritalStatus, //婚姻状况\r\n            partyTime: that.form.partyTime, //入党时间\r\n            workTime: that.form.workTime, //工作时间  \r\n            // companyName: that.form.companyName,  \r\n            \"office.id\": typeof(that.form.companyName)== 'string' ? that.form.companyNameid : that.form.companyName[that.form.companyName.length - 1], //工作单位id\r\n            presentOccupation: that.form.presentOccupation, //现任职务\r\n            jobLevel: that.form.jobLevel, //职务级别\r\n            incumbentTime: that.form.incumbentTime, //现任职务时间\r\n            personnelcategory: that.form.personnelcategory, //人员类型\r\n            titleJobs: that.form.titleJobs, //职称\r\n            titleJobsLevel: that.form.titleJobsLevel, //职称级别\r\n            isCPPCCMemberOrNot: that.form.isCPPCCMemberOrNot, //是否是政协委员\r\n            isNPCDEputiesOrNot: that.form.isNPCDEputiesOrNot, //是否人大代表\r\n            isPartyRepresentativeOrNot: that.form.isPartyRepresentativeOrNot, //是否党代表\r\n            presentAddress: that.form.presentAddress, //现住址\r\n            phone: that.form.phone, //联系电话\r\n            personalResume: that.form.personalResume, //个人工作简历\r\n            rewardsAndPunishment: that.form.rewardsAndPunishment, //奖惩情况\r\n            otherrelevantinformation: that.form.otherrelevantinformation, //其他相关情况\r\n            id: that.form.id,\r\n            userId: JSON.parse(localStorage.getItem(\"userinfo\")).isd,\r\n            // familyMembers:that.familyMembers,\r\n            // housingSituations:that.housingSituations,\r\n            // familyMembers: JSON.stringify(that.familyMembers),\r\n            // housingSituations: JSON.stringify(that.housingSituations)\r\n          };\r\n          // console.log(that.form.companyNameid)\r\n          // console.log(requestform)\r\n          // console.log(that.showinputcompanyName)\r\n          this.$ajax({\r\n            method: \"POST\",\r\n            url: that.globals.requesturl + \"web/personnel/save\",\r\n            data: requestform,\r\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\"},\r\n            transformRequest: [\r\n              function(data) {\r\n                return qs.stringify(data);\r\n              }\r\n            ]\r\n          }).then(res => {\r\n            if (res.data.errorCode == \"-1\") {\r\n              let familyhousinlist = {\r\n                familyMembers: JSON.stringify(that.familyMembers),\r\n                housingSituations: JSON.stringify(that.housingSituations),\r\n                userId: JSON.parse(localStorage.getItem(\"userinfo\")).isd,\r\n                personnelId:res.data.body.id\r\n              }\r\n              // let josnfoem = JSON.stringify(familyhousinlist)\r\n              this.$ajax({\r\n                method: \"POST\",\r\n                url: that.globals.requesturl + \"web/personnel/saveList\",\r\n                data: familyhousinlist,\r\n                headers: { \"Content-Type\": \"application/x-www-form-urlencoded\"},\r\n                transformRequest: [\r\n                  function(data) {\r\n                    return qs.stringify(data);\r\n                  }\r\n                ]\r\n              }).then(result => {\r\n                if (res.data.errorCode == \"-1\") {\r\n                  this.$message.success(res.data.msg);\r\n                  this.$router.go(-1);\r\n                }else{\r\n                  this.$message.error(res.data.msg);\r\n                }\r\n              })\r\n            } else {\r\n              this.$message.error(res.data.msg);\r\n            }\r\n          });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //添加个人及配偶、共同生活的子女拥有的房产情况   companyName.id\r\n    housingbtn() {\r\n      this.housingSituations.push({\r\n        roomNumber: \"\",\r\n        coveredArea: \"\",\r\n        purchasingDate: \"\",\r\n        purchasePrice: \"\",\r\n        propertyOwner: \"\",\r\n        location: \"\",\r\n        id: \"\"\r\n      });\r\n    },\r\n    //添加家庭成员\r\n    addfamily() {\r\n      this.familyMembers.push({\r\n        appellation: \"\", //称谓\r\n        name: \"\", //姓名\r\n        politicsStatus: \"\", //政治面貌\r\n        presentOccupation: \"\", //现任职务\r\n        companyName: \"\", //工作单位\r\n        age: \"\", //年龄\r\n        id: \"\"\r\n      });\r\n    },\r\n    // 查询单位\r\n    initunits() {\r\n      let that = this;\r\n      let objs = {\r\n        userId: JSON.parse(localStorage.getItem(\"userinfo\")).isd\r\n      };\r\n      this.$ajax({\r\n        method: \"POST\",\r\n        url: that.globals.requesturl + \"web/office/list\",\r\n        data: objs,\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        transformRequest: [\r\n          function(data) {\r\n            return qs.stringify(data);\r\n          }\r\n        ]\r\n      }).then(res => {\r\n        if (res.data.errorCode == \"-1\") {\r\n          let lists = [];\r\n          that.unitslist = res.data.body.officeList.map(function(list, index) {\r\n            return {\r\n              id: list.id,\r\n              name: list.name,\r\n              children: []\r\n            };\r\n          });\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      });\r\n    },\r\n    //级联事件\r\n    unitChanges(data) {\r\n      let that = this;\r\n      let objs = {\r\n        userId: JSON.parse(localStorage.getItem(\"userinfo\")).isd,\r\n        parentId: data[data.length - 1]\r\n      };\r\n      this.$ajax({\r\n        method: \"POST\",\r\n        url: that.globals.requesturl + \"web/office/getChildren\",\r\n        data: objs,\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        transformRequest: [\r\n          function(data) {\r\n            return qs.stringify(data);\r\n          }\r\n        ]\r\n      }).then(res => {\r\n        if (res.data.errorCode == \"-1\") {\r\n          that.showinputcompanyName = false\r\n          if (data.length == 1) {\r\n            that.unitslist.map(function(list, index) {\r\n              if (list.id == data[0]) {\r\n                if (!list.children.length) {\r\n                  list.children = res.data.body.officeList.map(function(\r\n                    list,\r\n                    index\r\n                  ) {\r\n                    return {\r\n                      id: list.id,\r\n                      name: list.name,\r\n                      children: list.hasChildren == false ? \"\" : []\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          } else if (data.length == 2) {\r\n            that.unitslist.map(function(list, index) {\r\n              if (list.id == data[0]) {\r\n                list.children.map(function(list, index) {\r\n                  if (list.id == data[1]) {\r\n                    if (!list.children.length) {\r\n                      list.children = res.data.body.officeList.map(function(\r\n                        list,\r\n                        index\r\n                      ) {\r\n                        return {\r\n                          id: list.id,\r\n                          name: list.name,\r\n                          children: list.hasChildren == false ? \"\" : []\r\n                        };\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      });\r\n    },\r\n    //初始化\r\n    init(objs) {\r\n      let that = this;\r\n      this.$ajax({\r\n        method: \"POST\",\r\n        url: that.globals.requesturl + \"web/personnel/form\",\r\n        data: objs,\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        transformRequest: [\r\n          function(data) {\r\n            return qs.stringify(data);\r\n          }\r\n        ]\r\n      }).then(res => {\r\n        if (res.data.errorCode == \"-1\") {\r\n          that.redpicimg = res.data.body.personnel.redBottomPhoto\r\n          that.form = {\r\n            redBottomPhoto:that.globals.requesturl + res.data.body.personnel.redBottomPhoto,\r\n            name: res.data.body.personnel.name,\r\n            sex: res.data.body.personnel.sex,\r\n            nativePlace: res.data.body.personnel.nativePlace,\r\n            educationBackground: res.data.body.personnel.educationBackground,\r\n            nation: res.data.body.personnel.nation,\r\n            maritalStatus: res.data.body.personnel.maritalStatus,\r\n            birthday: res.data.body.personnel.birthday,\r\n            idCard: res.data.body.personnel.idCard,\r\n            politicsStatus: res.data.body.personnel.politicsStatus,\r\n            partyTime: res.data.body.personnel.partyTime,\r\n            workTime: res.data.body.personnel.workTime,\r\n            companyName: res.data.body.personnel.office?res.data.body.personnel.office.name: \"\",\r\n            companyNameid:res.data.body.personnel.office?res.data.body.personnel.office.id: \"\",\r\n            presentOccupation: res.data.body.personnel.presentOccupation,\r\n            jobLevel: res.data.body.personnel.jobLevel,\r\n            incumbentTime: res.data.body.personnel.incumbentTime,\r\n            personnelcategory: res.data.body.personnel.personnelcategory,\r\n            titleJobs: res.data.body.personnel.titleJobs,\r\n            titleJobsLevel: res.data.body.personnel.titleJobsLevel,\r\n            isCPPCCMemberOrNot: res.data.body.personnel.isCPPCCMemberOrNot,\r\n            isNPCDEputiesOrNot: res.data.body.personnel.isNPCDEputiesOrNot,\r\n            isPartyRepresentativeOrNot:res.data.body.personnel.isPartyRepresentativeOrNot,\r\n            presentAddress: res.data.body.personnel.presentAddress,\r\n            phone: res.data.body.personnel.phone,\r\n            personalResume: res.data.body.personnel.personalResume,\r\n            rewardsAndPunishment: res.data.body.personnel.rewardsAndPunishment,\r\n            otherrelevantinformation:\r\n            res.data.body.personnel.otherrelevantinformation,\r\n            id: res.data.body.personnel.id\r\n          };\r\n          if (res.data.body.familyMembers.length > 0) {\r\n            let familyarr = [];\r\n            res.data.body.familyMembers.map(function(list) {\r\n              familyarr.push({\r\n                id: list.id,\r\n                appellation: list.appellation,\r\n                name: list.name,\r\n                politicsStatus: list.politicsStatus,\r\n                presentOccupation: list.presentOccupation,\r\n                age: list.age,\r\n                companyName: list.officeName\r\n              });\r\n            });\r\n            that.familyMembers = familyarr;\r\n          }\r\n          if (res.data.body.housingSituations.length > 0) {\r\n            let housingSituations = [];\r\n            res.data.body.housingSituations.map(function(list) {\r\n              housingSituations.push({\r\n                id: list.id,\r\n                roomNumber: list.roomNumber,\r\n                coveredArea: list.coveredArea,\r\n                purchasingDate: list.purchasingDate,\r\n                purchasePrice: list.purchasePrice,\r\n                propertyOwner: list.propertyOwner,\r\n                location: list.location\r\n              });\r\n            });\r\n            that.housingSituations = housingSituations;\r\n          }\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      });\r\n    },\r\n    // 表格样式的处理\r\n    cellStyle({ row, column, rowIndex, columnIndex }) {\r\n      //基数偶数延时不同\r\n      if (rowIndex % 2 != 0) {\r\n        return {\r\n          \"background-color\": \"#2162A8\",\r\n          \"text-align\": \"center\",\r\n          color: \"#fff\",\r\n          \"font-weight\": \"normal\",\r\n          padding: \"5px 0\",\r\n          height: \"60px\"\r\n        };\r\n      } else {\r\n        return {\r\n          \"background-color\": \"#02468F\",\r\n          \"text-align\": \"center\",\r\n          color: \"#fff\",\r\n          \"font-weight\": \"normal\",\r\n          height: \"60px\",\r\n          padding: \"5px 0\"\r\n        };\r\n      }\r\n    },\r\n    headerCellStyle({ row, rowIndex }) {\r\n      return {\r\n        \"background-color\": \"#027DBC\",\r\n        \"text-align\": \"center\",\r\n        color: \"#fff\",\r\n        \"font-weight\": \"normal\",\r\n        height: \"60px\",\r\n        \"font-size\": \"16px\"\r\n      };\r\n    },\r\n    // 上传头像的狗子函数\r\n    handleAvatarSuccess(event) {\r\n      let that = this;\r\n      let files = event.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(files);\r\n      reader.onload = function(e) {\r\n        that.form.redBottomPhoto = e.target.result;\r\n        let formdatas = new FormData();\r\n        formdatas.append('image',e.target.result)\r\n        that.$ajax({\r\n          method:\"POST\",\r\n          data:formdatas,\r\n          url: that.globals.requesturl + 'web/personnel/upload',\r\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n          // transformRequest: [function (data) { \r\n          //   return qs.stringify(data)\r\n          // }]\r\n        }).then(res => {\r\n          if (res.data.success && res.data.errorCode == '-1'){\r\n            that.form.redBottomPhoto = that.globals.requesturl+res.data.body.url\r\n            that.redimg = res.data.body.url\r\n          } \r\n        }, (err) =>{\r\n          that.$message.error(`失败`);\r\n        })\r\n      };\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = file.type === \"image/jpeg\";\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n      if (!isJPG) {\r\n        this.$message.error(\"上传头像图片只能是 JPG 格式!\");\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error(\"上传头像图片大小不能超过 2MB!\");\r\n      }\r\n      return isJPG && isLt2M;\r\n    },\r\n    //返回上一页\r\n    goback() {\r\n      this.$router.go(-1);\r\n    }\r\n  },\r\n  watch: {}\r\n};\r\n",null]}