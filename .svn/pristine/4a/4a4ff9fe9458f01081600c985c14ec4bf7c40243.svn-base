<template>
  <div class="zhongdianluru">
    <!-- 面包屑导航 -->
    <div class="navcrumbed">
      <div class="navcrumbedimg">
        <img @click="goback" style="cursor: pointer;" src="@/assets/navblack.png" alt srcset />
        <!-- <img src="@/assets/navblack.png" alt srcset /> -->
        <span>当前位置：</span>
      </div>
      <div class="navcrumbedlist">
        <el-breadcrumb separator-class="el-icon-arrow-right">
          <el-breadcrumb-item :to="{ path: '/problemstandBook/pointfollow' }">重点工作进度跟踪</el-breadcrumb-item>
          <el-breadcrumb-item>重点工作账录入</el-breadcrumb-item>
        </el-breadcrumb>
      </div>
    </div>
    <div class="content home">
      <div class="ImportJobAdd">
        <span class="border row1"></span>
        <span class="border row2"></span>
        <span class="border col1"></span>
        <span class="border col2"></span>
        <div class="ImportJobAddMain">
          <p class="title">重点工作录入</p>
          <el-form :model="formInline" label-width="150px">
            <el-form-item label="承担单位">
              <el-input
                v-model="formInline.underwriter.name"
                readonly
                v-if="showinput"
                style="width:200px"
              ></el-input>
              <el-cascader
                v-model="formInline.underwriter.id"
                :options="unitslist"
                @active-item-change="unitChanges"
                placeholder="请选择单位名称"
                :props="{value: 'id',label: 'name',children: 'children'}"
              ></el-cascader>
              <!-- <el-cascader v-model="formInline.underwriterId" :options="unitslist" @expand-change="unitChanges" placeholder="请选择承担单位"></el-cascader> -->
              <el-date-picker
                v-model="formInline.time"
                type="datetimerange"
                :picker-options="pickerOptions"
                range-separator="至"
                start-placeholder="请选择任务开始时间"
                end-placeholder="请选择预计结束时间"
                align="right"
                style="margin-left:1vw"
                value-format="yyyy-MM-dd HH:mm:ss"
              ></el-date-picker>
            </el-form-item>
            <el-form-item label="重点工作描述">
              <el-input
                type="textarea"
                v-model="formInline.desc"
                placeholder="请填写问题描述"
                :autosize="{ minRows: 5, maxRows: 5}"
              ></el-input>
            </el-form-item>
          </el-form>
          <div class="subBtnGroup">
            <div class="subBtnDiv">
              <!-- <button class="subBtn subBtnEnter">导入</button> -->
              <button class="subBtn subBtnSave" @click="subBtnSave">保存</button>
            </div>
          </div>
          <div class="ImportJobAddTable">
            <p class="title" style="border-top:1px solid #03D0FF;">
              重点工作录入记录
              <span @click="exportbtn">导出</span>
            </p>
            <el-table
              :data="tableData"
              border
              v-infinite-scroll="onscroll"
              :height="tableHeight"
              stripe
              style="background-color:transparent"
              :cell-style="cellStyle"
              :header-cell-style="headerCellStyle"
            >
              <el-table-column label="序号" type="index" :index="infoindex" width="100"></el-table-column>
              <el-table-column label="录入时间" prop="date" width="300"></el-table-column>
              <el-table-column label="承担单位" prop="office" width="300"></el-table-column>
              <el-table-column label="重点工作描述" prop="description"></el-table-column>
            </el-table>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import qs from "qs";
import Breadcrumb from "@/components/Breadcrumb";
export default {
  name: "ImportJobAdd",

  props: {},
  data() {
    return {
      showinput: false, //工作单位修改时显示
      unitslist: [],
      pickerOptions: "",
      formInline: {
        time: "",
        underwriter:{
          id:[],
          name:''
        },
        desc: ""
      },
      tableData: [],
      page: 1, //第几页
      pagesize: 20, //每页显示条数
      //表格高度
      tableHeight: "28vh"
    };
  },
  created() {
    document.title = "重点工作录入";
  },
  computed: {},
  created() {},
  mounted() {
    if (this.$route.query.id) {
      this.showinput = true;
    }
    let objs = {
      userId: JSON.parse(localStorage.getItem("userinfo")).isd,
      pageNo: this.page,
      pageSize: this.pagesize
    };
    this.init(objs);
    this.initunits();
    this.modification()
  },
  methods: {
    //滚动加载
    onscroll() {
    },
    //下标初始化
    infoindex(value) {
      return value + 1 > 9 ? value + 1 : "0" + (value + 1);
    },
    // 表格样式的处理
    cellStyle({ row, column, rowIndex, columnIndex }) {
      //基数偶数延时不同
      if (rowIndex % 2 != 0) {
        return {
          "background-color": "#2162A8",
          "text-align": "center",
          color: "#fff",
          "font-weight": "normal",
          padding: "5px 0"
        };
      } else {
        return {
          "background-color": "#02468F",
          "text-align": "center",
          color: "#fff",
          "font-weight": "normal",
          padding: "5px 0"
        };
      }
    },
    headerCellStyle({ row, rowIndex }) {
      return {
        "background-color": "#027DBC",
        "text-align": "center",
        color: "#fff",
        "font-weight": "normal",
        "font-size": "16px"
      };
    },

    //导出
    exportbtn() {
      let that = this,
        ids = [];
      if (that.tableData.length == 0) {
        this.$message.error("暂无数据");
      } else {
        that.tableData.map(function(list) {
          ids.push(list.id);
        });
        let obbjstr = {
          ids: ids.join(),
          userId: JSON.parse(localStorage.getItem("userinfo")).isd
        };
        this.$ajax({
          method: "POST",
          url: that.globals.requesturl + "web/keyworkprogress/export",
          data: obbjstr,
          headers: { "Content-Type": "application/x-www-form-urlencoded" },
          transformRequest: [
            function(data) {
              return qs.stringify(data);
            }
          ]
        }).then(res => {
          if (res.data.errorCode == "-1") {
            let url = res.data.body.path;
            let link = document.createElement("a");
            link.style.display = "none";
            link.href = url;
            link.setAttribute("download", "人员台账表");
            document.body.appendChild(link);
            link.click();
            this.$message.success(res.data.msg);
          } else {
            this.$message.error(res.data.msg);
          }
        });
      }
    },
    // 点击修改进入的页面
    modification() {
      let that = this;
      let obbjstr = {
        id: this.$route.query.id,
        userId: JSON.parse(localStorage.getItem("userinfo")).isd
      };
      this.$ajax({
        method: "POST",
        url: that.globals.requesturl + "web/keyworkprogress/form",
        data: obbjstr,
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        transformRequest: [
          function(data) {
            return qs.stringify(data);
          }
        ]
      }).then(res => {
        if (res.data.errorCode == "-1") {
          that.formInline.desc = res.data.body.description;
          that.formInline.time = [res.data.body.startTime,res.data.body.endTime];
          that.formInline.underwriter.name=res.data.body.underWriterName
          // that.formInline.underwriter.name=res.data.body.underWriter.name
          let arr=[]
          arr.push(res.data.body.underWriter.id);
          that.formInline.underwriter.id=arr
        } else {
          this.$message.error(res.data.msg);
        }
      });
    },

    // 初始化
    init(objs) {
      let that = this;
      this.$ajax({
        method: "POST",
        url: that.globals.requesturl + "web/keyworkprogress/list",
        data: objs,
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        transformRequest: [
          function(data) {
            return qs.stringify(data);
          }
        ]
      }).then(res => {
        if (res.data.success && res.data.errorCode == -1) {
          let listarr = [];
          res.data.body.keyWorkProgressList.map(function(list) {
            listarr.push({
              date: list.createDate,
              office: list.office,
              description: list.description,
              jobSchedule: list.jobSchedule,
              id: list.id
            });
          });
          that.tableData = listarr;
        } else {
          this.$message.error(res.data.msg);
        }
      });
    },
    //保存进度
    subBtnSave() {
      let that = this;
      if (that.formInline.underwriter.id == "") {
        this.$message.error("请选择承担单位");
      } else if (that.formInline.time == "") {
        this.$message.error("请选择开始时间和结束时间");
      } else if (that.formInline.desc == "") {
        this.$message.error("请填写问题描述");
      } else {
        let objs = {
          userId: JSON.parse(localStorage.getItem("userinfo")).isd,
          "underWriter.id":that.formInline.underwriter.id[that.formInline.underwriter.id.length-1],
          startTime: that.formInline.time[0],
          endTime: that.formInline.time[1],
          description: that.formInline.desc,
          id: this.$route.query.id,
          jobSchedule:this.$route.query.jobSchedule
        };
        console.log(objs)
        // return
        this.$ajax({
          method: "POST",
          url: that.globals.requesturl + "web/keyworkprogress/save",
          data: objs,
          headers: { "Content-Type": "application/x-www-form-urlencoded" },
          transformRequest: [
            function(data) {
              return qs.stringify(data);
            }
          ]
        }).then(res => {
          if (res.data.errorCode == "-1") {
            this.$message.success(res.data.msg);
            this.$router.go(-1);
          } else {
            this.$message.error(res.data.msg);
          }
        });
      }
    },
    // 查询单位
    initunits() {
      let that = this;
      let objs = {
        userId: JSON.parse(localStorage.getItem("userinfo")).isd
      };
      this.$ajax({
        method: "POST",
        url: that.globals.requesturl + "web/office/list",
        data: objs,
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        transformRequest: [
          function(data) {
            return qs.stringify(data);
          }
        ]
      }).then(res => {
        if (res.data.errorCode == "-1") {
          let lists = [];
          that.unitslist = res.data.body.officeList.map(function(list, index) {
            return {
              id: list.id,
              name: list.name,
              children: []
            };
          });
        } else {
          this.$message.error(res.data.msg);
        }
      });
    },
    //级联事件
    unitChanges(data) {
      let that = this;

      let objs = {
        userId: JSON.parse(localStorage.getItem("userinfo")).isd,
        parentId: data[data.length - 1]
      };
      this.$ajax({
        method: "POST",
        url: that.globals.requesturl + "web/office/getChildren",
        data: objs,
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        transformRequest: [
          function(data) {
            return qs.stringify(data);
          }
        ]
      }).then(res => {
        if (res.data.errorCode == "-1") {
          this.showinput = false;
          if (data.length == 1) {
            that.unitslist.map(function(list, index) {
              if (list.id == data[0]) {
                if (!list.children.length) {
                  list.children = res.data.body.officeList.map(function(
                    list,
                    index
                  ) {
                    return {
                      id: list.id,
                      name: list.name,
                      children: list.hasChildren == false ? "" : []
                    };
                  });
                }
              }
            });
          } else if (data.length == 2) {
            that.unitslist.map(function(list, index) {
              if (list.id == data[0]) {
                list.children.map(function(list, index) {
                  if (list.id == data[1]) {
                    if (!list.children.length) {
                      list.children = res.data.body.officeList.map(function(
                        list,
                        index
                      ) {
                        return {
                          id: list.id,
                          name: list.name,
                          children: list.hasChildren == false ? "" : []
                        };
                      });
                    }
                  }
                });
              }
            });
          }else if(data.length == 3){
            that.unitslist.map(function(list,index){
              if(list.id == data[0]){
                list.children.map(function(list,index){
                  if(list.id == data[1]){
                    list.children.map(function(list,index){
                      if(list.id == data[2]){
                        if(!list.children.length){
                          list.children = res.data.body.officeList.map(function(list,index){
                            return {
                              id: list.id,
                              name: list.name,
                              children:list.hasChildren==false?"":[]
                            }
                          })
                        }
                      }
                    })

                  }
                })
              }
            })
          }
        } else {
          this.$message.error(res.data.msg);
        }
      });
    },
    //返回上一页
    goback() {
      this.$router.go(-1);
    }
  },
  watch: {}
};
</script>

<style lang="scss">
.zhongdianluru {
  textarea:-ms-input-placeholder {
    color: #333;
  }

  textarea::-webkit-input-placeholder {
    color: #333;
  }

  textarea::-moz-placeholder {
    color: #333;
  }

  textarea:-moz-placeholder {
    color: #333;
  }
  .el-breadcrumb__inner {
    color: #fff;
  }
  .el-breadcrumb__item:last-child .el-breadcrumb__inner {
    color: #03d0ff;
  }
  .el-form--inline .el-form-item {
    margin-bottom: 0;
  }
  .el-form-item__label {
    color: #fff;
  }
  .el-input__inner,
  .el-input__inner:hover {
    background: transparent;
    border: 1px solid #016cae;
  }
  .el-table,
  .el-table__expanded-cell,
  .el-table th,
  .el-table tr,
  .el-table th:hover,
  .el-table tr:hover,
  .el-table--enable-row-hover .el-table__body tr:hover > td {
    background: transparent;
  }
  .el-table thead,
  .el-table {
    color: #fff;
  }
  .el-table th {
    text-align: center;
  }
  .el-table .cell {
    text-align: center;
  }
  .el-table--border {
    border: 1px solid #03d0ff;
  }
  .el-table td,
  .el-table th.is-leaf {
    border-bottom: 1px solid #03d0ff;
    border-right: 1px solid #03d0ff;
  }
  .el-table th.is-leaf:last-child,
  .el-table--border th:nth-last-child(2) {
    // border: none;
  }
  .el-table thead {
    background: #027dbc;
  }
  .el-table thead tr th:last-child {
    border: none;
  }
  .el-table::before,
  .el-table--border::after {
    background-color: transparent;
  }
  td.el-table_1_column_10 {
    border-right: none !important;
  }
  .el-table .el-table__body-wrapper tr:nth-child(even) {
    background: #2162a8;
  }
  .el-table__body-wrapper {
    max-height: 320px;
    overflow-y: scroll;
  }
  .personnelframe-pricker .el-cascader {
    height: 30px;
  }
  .personnelframe-pricker .el-input__inner,
  .personnelframe-pricker .el-input__inner:hover {
    border: 1px solid #bcd9e8 !important;
    font-size: 10px;
    height: 30px;
    line-height: 30px;
  }
  .el-cascader-node:not(.is-disabled):hover {
    background: #91c1e7 !important;
  }
  .el-tree,
  .el-tree-node__content:hover,
  .el-tree-node:focus > .el-tree-node__content {
    background: transparent;
    color: #fff;
  }
  .el-tree-node__expand-icon {
    color: #fff;
  }
  .el-table__body tr.current-row > td {
    background: #025bff;
  }
  .el-breadcrumb__inner a,
  .el-breadcrumb__inner.is-link,
  .el-breadcrumb__inner a:hover,
  .el-breadcrumb__inner.is-link:hover {
    color: #fff;
    font-weight: normal;
  }
  .el-breadcrumb__item:last-child .el-breadcrumb__inner:hover {
    color: #03d0ff;
    cursor: default;
  }
}

// 面包屑导航
.navcrumbed {
  width: 96%;
  font-size: 15px;
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  line-height: 50px;
  position: relative;
  top: -25px;
  left: 30px;
  .navcrumbedimg {
    display: inline-flex;
    align-items: center;

    img {
      width: 25px;
      height: 22px;
      margin-right: 5px;
    }
  }
}
.ImportJobAdd {
  width: 95%;
  margin: 0 auto;
  box-sizing: border-box;
  border: 1px solid #03d0ff;
  box-shadow: 0 0 5px #03d0ff inset;
  -webkit-box-shadow: 0 0 5px #03d0ff inset;
  -moz-box-shadow: 0 0 5px #03d0ff inset;
  -o-box-shadow: 0 0 0 5px #03d0ff inset;
  position: relative;
  color: #fff;
  padding: 0 12px 10px;

  .ImportJobAddMain {
    width: 100%;
    box-sizing: border-box;

    .ImportJobAddTable {
      margin-top: -40px;
    }
  }

  .title {
    width: 100%;
    box-sizing: border-box;
    height: 50px;
    line-height: 50px;
    border-bottom: 1px #03d0ff solid;
    font-size: 16px;
    padding: 0 10px 10px;
    position: relative;
  }
  .title span {
    width: 80px;
    height: 35px;
    background: #029aff;
    color: #fff;
    border-radius: 3px;
    line-height: 35px;
    text-align: center;
    position: absolute;
    top: 50%;
    right: 10px;
    transform: translateY(-50%);
    font-size: 13px;
    cursor: pointer;
  }
  .subBtnGroup {
    overflow: hidden;
    position: relative;
    top: -190px;
    width: 200px;
    left: 1000px;

    .subBtnDiv {
      width: 180px;
      float: right;
      display: flex;
      justify-content: space-around;
      position: relative;
      top: 0px;
      left: 0;

      .subBtn {
        border: none;
        width: 80px;
        height: 35px;
        color: #ffffff;
        border-radius: 3px;
        line-height: 35px;
        text-align: center;
        font-size: 12px;
      }

      .subBtnEnter {
        background: #029aff;
      }

      .subBtnSave {
        background: #e08801;
        cursor: pointer;
      }
    }
  }

  .el-form-item__label {
    color: #ffffff;
  }

  .el-input__inner {
    color: #fff;
    background: transparent;
    border: 1px solid rgba(3, 208, 255, 0.7);
  }

  input::placeholder {
    color: #fff;
  }

  .el-button--primary {
    color: #fff;
    background-color: #025bff;
    border-color: #025bff;
  }

  .el-form {
    margin-top: 15px;
  }

  .el-progress__text {
    color: #fff;
    font-size: 12px !important;
  }

  .el-progress-bar__outer {
    background: #b9b9b9;
  }

  .el-date-editor .el-range-input {
    background: transparent;
    color: #fff;
  }

  .el-date-editor .el-range-separator {
    color: #fff;
  }

  .el-textarea__inner {
    background: #d9ebf3;
  }

  .el-textarea .el-textarea__inner {
    resize: none;
  }
}

.el-scrollbar__wrap {
  overflow: auto !important;
}
</style>