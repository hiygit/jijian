{"remainingRequest":"f:\\纪检项目\\monitor\\byqc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!f:\\纪检项目\\monitor\\byqc\\src\\views\\ProblemStandBookEnter\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"f:\\纪检项目\\monitor\\byqc\\src\\views\\ProblemStandBookEnter\\index.vue","mtime":1576325277622},{"path":"f:\\纪检项目\\monitor\\byqc\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"f:\\纪检项目\\monitor\\byqc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"f:\\纪检项目\\monitor\\byqc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport qs from 'qs'\r\nimport Breadcrumb from \"@/components/Breadcrumb\";\r\nexport default {\r\n  name: \"ProblemStandBookEnter\",\r\n  data() {\r\n    return {\r\n      showinput:false,//单位名称框显示\r\n      inputcompanyName:\"\",//单位名称 只做显示\r\n      itemid:\"\",\r\n      form: {\r\n        name: \"\",\r\n        companyName: \"\",\r\n        companyLevel: \"\",\r\n        duty: \"\",\r\n        jobLevel: \"\",\r\n        time: \"\",\r\n        problemSources: \"\",\r\n        problemType: \"\",\r\n        problemKind: \"\",\r\n        disposalOpinion: \"\",\r\n        processingTime: \"\",\r\n        abarbeitungTime: \"\",\r\n        abarbeitungSituation: \"\",\r\n        problemDigest:\"\",\r\n        handlingInformation:\"\",\r\n        effectRectification:\"\",\r\n        remarks: \"\",\r\n        'companyName.id':\"\"\r\n      },\r\n      rules:{\r\n        name:[{required: true, message: '请输入活动名称', trigger: 'blur'}],\r\n        companyName:[{required: true, message: '请选择单位', trigger: 'blur'}],\r\n        companyLevel:[{required: true, message: '请选择单位级别', trigger: 'blur'}],\r\n        duty:[{required: true, message: '请填写职务', trigger: 'blur'}],\r\n        jobLevel:[{required: true, message: '请选择职务级别', trigger: 'blur'}],\r\n        time:[{required: true, message: '请选择时间', trigger: 'blur'}],\r\n        problemSources:[{required: true, message: '请选择问题来源', trigger: 'blur'}],\r\n        problemType:[{required: true, message: '请选择问题类型', trigger: 'blur'}],\r\n        problemKind:[{required: true, message: '请选择问题类型', trigger: 'blur'}],\r\n        disposalOpinion:[{required: true, message: '请选择处置意见', trigger: 'blur'}],\r\n        processingTime:[{required: true, message: '请选择处理时间', trigger: 'blur'}],\r\n        abarbeitungTime:[{required: true, message: '请选择整改时间', trigger: 'blur'}],\r\n        abarbeitungSituation:[{required: true, message: '请选择整改情况', trigger: 'blur'}],\r\n      },\r\n      //级联选择\r\n      unitslist:[],\r\n      //单位级别\r\n      unitRankList: [],\r\n      //职务级别\r\n      dutyRankList: [],\r\n      //问题来源\r\n      proFromList: [],\r\n      //问题类型\r\n      proTypeList: [],\r\n      //问题种类\r\n      proVarietyList: [],\r\n      //处置意见\r\n      disposeIdeaList: [],\r\n      //整改情况\r\n      reformStatusList: [],\r\n    };\r\n  },\r\n  created() {\r\n    document.title = \"线索台账录入\";\r\n    let that = this\r\n    //问题来源\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + 'web/dict',\r\n      data: {type:'problem_sources'},\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      transformRequest: [function (data) { \r\n        return qs.stringify(data)\r\n      }]\r\n    }).then(res=>{\r\n      if(res.data.success && res.data.errorCode == '-1'){\r\n        res.data.body.dictValueList.map(function(list){\r\n          that.proFromList.push({value:list.value,label:list.label})\r\n        })\r\n      }else{\r\n        this.$message.error(res.data.msg); \r\n      }\r\n    })\r\n    //职务级别\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + 'web/dict',\r\n      data: {type:'job_level'},\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      transformRequest: [function (data) { \r\n        return qs.stringify(data)\r\n      }]\r\n    }).then(res=>{\r\n      if(res.data.success && res.data.errorCode == '-1'){\r\n        res.data.body.dictValueList.map(function(list){\r\n          that.dutyRankList.push({value:list.value,label:list.label})\r\n        })\r\n      }else{\r\n        this.$message.error(res.data.msg); \r\n      }\r\n    })\r\n    //单位级别\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + 'web/dict',\r\n      data: {type:'company_level'},\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      transformRequest: [function (data) { \r\n        return qs.stringify(data)\r\n      }]\r\n    }).then(res=>{\r\n      if(res.data.success && res.data.errorCode == '-1'){\r\n        res.data.body.dictValueList.map(function(list){\r\n          that.unitRankList.push({value:list.value,label:list.label})\r\n        })\r\n      }else{\r\n        this.$message.error(res.data.msg); \r\n      }\r\n    })\r\n    //问题类型\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + 'web/dict',\r\n      data: {type:'problem_type'},\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      transformRequest: [function (data) { \r\n        return qs.stringify(data)\r\n      }]\r\n    }).then(res=>{\r\n      if(res.data.success && res.data.errorCode == '-1'){\r\n        res.data.body.dictValueList.map(function(list){\r\n          that.proTypeList.push({value:list.value,label:list.label})\r\n        })\r\n      }else{\r\n        this.$message.error(res.data.msg); \r\n      }\r\n    })\r\n    //问题种类\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + 'web/dict',\r\n      data: {type:'problem_kind'},\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      transformRequest: [function (data) { \r\n        return qs.stringify(data)\r\n      }]\r\n    }).then(res=>{\r\n      if(res.data.success && res.data.errorCode == '-1'){\r\n        res.data.body.dictValueList.map(function(list){\r\n          that.proVarietyList.push({value:list.value,label:list.label})\r\n        })\r\n      }else{\r\n        this.$message.error(res.data.msg); \r\n      }\r\n    })\r\n    //处置意见\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + 'web/dict',\r\n      data: {type:'disposal_opinion'},\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      transformRequest: [function (data) { \r\n        return qs.stringify(data)\r\n      }]\r\n    }).then(res=>{\r\n      if(res.data.success && res.data.errorCode == '-1'){\r\n        res.data.body.dictValueList.map(function(list){\r\n          that.disposeIdeaList.push({value:list.value,label:list.label})\r\n        })\r\n      }else{\r\n        this.$message.error(res.data.msg); \r\n      }\r\n    })\r\n    //整改情况\r\n    this.$ajax({\r\n      method: \"POST\",\r\n      url: this.globals.requesturl + 'web/dict',\r\n      data: {type:'abarbeitung_situation'},\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      transformRequest: [function (data) { \r\n        return qs.stringify(data)\r\n      }]\r\n    }).then(res=>{\r\n      if(res.data.success && res.data.errorCode == '-1'){\r\n        res.data.body.dictValueList.map(function(list){\r\n          that.reformStatusList.push({value:list.value,label:list.label})\r\n        })\r\n      }else{\r\n        this.$message.error(res.data.msg); \r\n      }\r\n    })\r\n  },\r\n  mounted(){\r\n    let id = this.$route.query.id\r\n    if(id){\r\n      this.showinput = true\r\n      this.itemid = id\r\n      let objs = {\r\n        userId: JSON.parse(localStorage.getItem('userinfo')).isd,\r\n        id:id\r\n      }\r\n      this.init(objs)\r\n    }\r\n    this.initunits()\r\n  },\r\n  methods:{\r\n    //页面初始化\r\n    init(objs){\r\n      let that = this\r\n      this.$ajax({\r\n        method:\"POST\",\r\n        url: that.globals.requesturl + 'web/problemsofparameter/form',\r\n        data: objs,\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n        transformRequest: [function (data) { \r\n          return qs.stringify(data)\r\n        }]\r\n      }).then(res=>{\r\n        if(res.data.success && res.data.errorCode == '-1'){\r\n          that.inputcompanyName = res.data.body.companyName.name;\r\n          that.form.name = res.data.body.name;\r\n          that.form.effectRectification = res.data.body.effectRectification;\r\n          that.form.handlingInformation = res.data.body.handlingInformation;\r\n          that.form.problemDigest = res.data.body.problemDigest;\r\n          that.form.companyName = res.data.body.companyName.name;\r\n          that.form.duty = res.data.body.duty;\r\n          that.form.time = res.data.body.time;\r\n          that.form.processingTime = res.data.body.processingTime;\r\n          that.form.abarbeitungTime = res.data.body.abarbeitungTime;\r\n          that.form.remarks = res.data.body.remarks;\r\n          that.dutyRankList.map(function(list){\r\n            if(list.value == res.data.body.jobLevel){\r\n              that.form.jobLevel = list.label\r\n            }\r\n          })\r\n          that.disposeIdeaList.map(function(list){\r\n            if(list.value == res.data.body.disposalOpinion){\r\n              that.form.disposalOpinion = list.label\r\n            }\r\n          })\r\n          that.reformStatusList.map(function(list){\r\n            if(list.value == res.data.body.abarbeitungSituation){\r\n              that.form.abarbeitungSituation = list.label\r\n            }\r\n          })\r\n          that.proVarietyList.map(function(list){\r\n            if(list.value == res.data.body.problemKind){\r\n              that.form.problemKind = list.label\r\n            }\r\n          })\r\n          that.proFromList.map(function(list){\r\n            if(list.value == res.data.body.problemSources){\r\n              that.form.problemSources = list.label\r\n            }\r\n          })\r\n          that.proTypeList.map(function(list){\r\n            if(list.value == res.data.body.problemType){\r\n              that.form.problemType = list.label\r\n            }\r\n          })\r\n          that.unitRankList.map(function(list){\r\n            if(list.value == res.data.body.companyLevel){\r\n              that.form.companyLevel = list.label\r\n            }\r\n          })\r\n        }else{\r\n          this.$message.error(res.data.msg); \r\n        }\r\n      })\r\n    },\r\n    // 查询单位\r\n    initunits(){\r\n      let that = this; \r\n      let objs = {\r\n        userId: JSON.parse(localStorage.getItem('userinfo')).isd,\r\n      } \r\n      this.$ajax({\r\n        method: \"POST\",\r\n        url: that.globals.requesturl + 'web/office/list',\r\n        data: objs,\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n        transformRequest: [function (data) { \r\n          return qs.stringify(data)\r\n        }]\r\n      }).then(res=>{\r\n        if(res.data.errorCode == \"-1\"){\r\n          let lists = [];\r\n          res.data.body.officeList.map(function(list,index){\r\n            lists.push({\r\n              label:list.name,\r\n              value:list.id,\r\n              dex:index,\r\n              children: list.hasChildren==false?\"\":[{}],\r\n              ishasChildren:list.hasChildren==false?false:true\r\n            })\r\n          })\r\n          that.unitslist = lists\r\n          that.datas = lists\r\n        }else{\r\n          this.$message.error(res.data.msg); \r\n        }\r\n      })\r\n    },\r\n    //级联事件\r\n    unitChanges(data) {\r\n      let that = this;\r\n      let objs = {\r\n        userId: JSON.parse(localStorage.getItem('userinfo')).isd,\r\n        parentId:data[0]\r\n      } \r\n      this.$ajax({\r\n        method: \"POST\",\r\n        url: that.globals.requesturl + 'web/office/getChildren',\r\n        data: objs,\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n        transformRequest: [function (data) { \r\n          return qs.stringify(data)\r\n        }]\r\n      }).then(res=>{\r\n        if(res.data.errorCode == \"-1\"){\r\n          that.inputcompanyName = that.form.companyName\r\n          that.showinput = false\r\n          let lists = [];\r\n          res.data.body.officeList.map(function(list,index){\r\n            lists.push({\r\n              label:list.name,\r\n              value:list.id,\r\n              dex:index,\r\n              children: list.hasChildren==false?\"\":[{}],\r\n              ishasChildren:list.hasChildren==false?false:true\r\n            })\r\n          })\r\n          let nums = 0;\r\n          //根据二级中value判断让入哪个一级单位\r\n          that.unitslist.map(function(list,index){\r\n            if(list.value == data){\r\n              nums = index\r\n            }\r\n          })\r\n          that.unitslist[nums].children = lists\r\n        }else{\r\n          this.$message.error(res.data.msg); \r\n        }\r\n      })\r\n    },\r\n    //保存\r\n    savebtns(formName){\r\n      let that = this;\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          let requestform = {\r\n            id:that.itemid,\r\n            name: that.form.name,\r\n            companyLevel: that.form.companyLevel,\r\n            duty: that.form.duty,\r\n            jobLevel: that.form.jobLevel,\r\n            time: that.form.time,\r\n            problemSources: that.form.problemSources,\r\n            problemType: that.form.problemType,\r\n            problemKind: that.form.problemKind,\r\n            disposalOpinion: that.form.disposalOpinion,\r\n            processingTime: that.form.processingTime,\r\n            abarbeitungTime: that.form.abarbeitungTime,\r\n            abarbeitungSituation: that.form.abarbeitungSituation,\r\n            problemDigest:that.form.problemDigest,\r\n            handlingInformation:that.form.handlingInformation,\r\n            effectRectification:that.form.effectRectification,\r\n            remarks: that.form.remarks,\r\n            'companyName.id':that.form.companyName[that.form.companyName.length-1],\r\n            userId: JSON.parse(localStorage.getItem('userinfo')).isd\r\n          }\r\n          this.$ajax({\r\n            method: \"POST\",\r\n            url: that.globals.requesturl + 'web/problemsofparameter/save',\r\n            data: requestform,\r\n            headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n            transformRequest: [function (data) { \r\n              return qs.stringify(data)\r\n            }]\r\n          }).then(res=>{\r\n            if(res.data.errorCode == \"-1\"){\r\n              this.$message.success(res.data.msg); \r\n              this.$router.go(-1)\r\n            }else{\r\n              this.$message.error(res.data.msg); \r\n            }\r\n          })\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n  },\r\n  components: {\r\n    // Breadcrumb\r\n  }\r\n};\r\n",null]}